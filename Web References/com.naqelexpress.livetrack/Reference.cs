//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace InfoTrack.NaqelAPI.com.naqelexpress.livetrack {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GPSServiceSoap", Namespace="http://tempuri.org/")]
    public partial class GPSService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpeedAlertsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGeofenceReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVehicleEventStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVehicleSpeedStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DashboadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DashBoradSpeedAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetlocationByWaybillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentLOcationByWaybillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetlocationByTripIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTripDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliverySheetDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliverySheetDetailsWithCnameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalTripDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalWashedDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBreakdownDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IdlleCumulativeOperationCompleted;
        
        private System.Threading.SendOrPostCallback IdlleCumulativeByGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoIdlleCumulativeByGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeePhotoByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeviceMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback CumulativeWorkingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentLocatationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFleetDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGeofenceAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeofenceLocationNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseGeoLocOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsPresentInGeofenceCircleOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsPresentInGeofencePolygonOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GPSService() {
            this.Url = global::InfoTrack.NaqelAPI.Properties.Settings.Default.InfoTrack_NaqelAPI_com_naqelexpress_livetrack_GPSService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event GetSpeedAlertsCompletedEventHandler GetSpeedAlertsCompleted;
        
        /// <remarks/>
        public event getGeofenceReportCompletedEventHandler getGeofenceReportCompleted;
        
        /// <remarks/>
        public event getVehicleEventStatusCompletedEventHandler getVehicleEventStatusCompleted;
        
        /// <remarks/>
        public event getVehicleSpeedStatusCompletedEventHandler getVehicleSpeedStatusCompleted;
        
        /// <remarks/>
        public event DashboadStatusCompletedEventHandler DashboadStatusCompleted;
        
        /// <remarks/>
        public event DashBoradSpeedAlertCompletedEventHandler DashBoradSpeedAlertCompleted;
        
        /// <remarks/>
        public event GetEmployeesCompletedEventHandler GetEmployeesCompleted;
        
        /// <remarks/>
        public event GetlocationByWaybillCompletedEventHandler GetlocationByWaybillCompleted;
        
        /// <remarks/>
        public event GetCurrentLOcationByWaybillCompletedEventHandler GetCurrentLOcationByWaybillCompleted;
        
        /// <remarks/>
        public event GetlocationByTripIDCompletedEventHandler GetlocationByTripIDCompleted;
        
        /// <remarks/>
        public event GetTripDetailsCompletedEventHandler GetTripDetailsCompleted;
        
        /// <remarks/>
        public event GetDeliverySheetDetailsCompletedEventHandler GetDeliverySheetDetailsCompleted;
        
        /// <remarks/>
        public event GetDeliverySheetDetailsWithCnameCompletedEventHandler GetDeliverySheetDetailsWithCnameCompleted;
        
        /// <remarks/>
        public event GetTotalTripDetailsCompletedEventHandler GetTotalTripDetailsCompleted;
        
        /// <remarks/>
        public event GetTotalWashedDetailsCompletedEventHandler GetTotalWashedDetailsCompleted;
        
        /// <remarks/>
        public event GetBreakdownDetailsCompletedEventHandler GetBreakdownDetailsCompleted;
        
        /// <remarks/>
        public event IdlleCumulativeCompletedEventHandler IdlleCumulativeCompleted;
        
        /// <remarks/>
        public event IdlleCumulativeByGroupCompletedEventHandler IdlleCumulativeByGroupCompleted;
        
        /// <remarks/>
        public event AutoIdlleCumulativeByGroupCompletedEventHandler AutoIdlleCumulativeByGroupCompleted;
        
        /// <remarks/>
        public event GetEmployeeMasterCompletedEventHandler GetEmployeeMasterCompleted;
        
        /// <remarks/>
        public event GetEmployeePhotoByIDCompletedEventHandler GetEmployeePhotoByIDCompleted;
        
        /// <remarks/>
        public event GetDeviceMasterCompletedEventHandler GetDeviceMasterCompleted;
        
        /// <remarks/>
        public event CumulativeWorkingCompletedEventHandler CumulativeWorkingCompleted;
        
        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;
        
        /// <remarks/>
        public event GetCurrentLocatationCompletedEventHandler GetCurrentLocatationCompleted;
        
        /// <remarks/>
        public event GetFleetDetailsCompletedEventHandler GetFleetDetailsCompleted;
        
        /// <remarks/>
        public event UpdateGeofenceAlertCompletedEventHandler UpdateGeofenceAlertCompleted;
        
        /// <remarks/>
        public event GetGeofenceLocationNameCompletedEventHandler GetGeofenceLocationNameCompleted;
        
        /// <remarks/>
        public event GetLocationNameCompletedEventHandler GetLocationNameCompleted;
        
        /// <remarks/>
        public event ReverseGeoLocCompletedEventHandler ReverseGeoLocCompleted;
        
        /// <remarks/>
        public event IsPresentInGeofenceCircleCompletedEventHandler IsPresentInGeofenceCircleCompleted;
        
        /// <remarks/>
        public event IsPresentInGeofencePolygonCompletedEventHandler IsPresentInGeofencePolygonCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login() {
            object[] results = this.Invoke("Login", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync() {
            this.LoginAsync(null);
        }
        
        /// <remarks/>
        public void LoginAsync(object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[0], this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Logout", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Logout() {
            object[] results = this.Invoke("Logout", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LogoutAsync() {
            this.LogoutAsync(null);
        }
        
        /// <remarks/>
        public void LogoutAsync(object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[0], this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpeedAlerts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetSpeedAlerts() {
            object[] results = this.Invoke("GetSpeedAlerts", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSpeedAlertsAsync() {
            this.GetSpeedAlertsAsync(null);
        }
        
        /// <remarks/>
        public void GetSpeedAlertsAsync(object userState) {
            if ((this.GetSpeedAlertsOperationCompleted == null)) {
                this.GetSpeedAlertsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpeedAlertsOperationCompleted);
            }
            this.InvokeAsync("GetSpeedAlerts", new object[0], this.GetSpeedAlertsOperationCompleted, userState);
        }
        
        private void OnGetSpeedAlertsOperationCompleted(object arg) {
            if ((this.GetSpeedAlertsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpeedAlertsCompleted(this, new GetSpeedAlertsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGeofenceReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getGeofenceReport(string param, string FromD, string ToD) {
            object[] results = this.Invoke("getGeofenceReport", new object[] {
                        param,
                        FromD,
                        ToD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGeofenceReportAsync(string param, string FromD, string ToD) {
            this.getGeofenceReportAsync(param, FromD, ToD, null);
        }
        
        /// <remarks/>
        public void getGeofenceReportAsync(string param, string FromD, string ToD, object userState) {
            if ((this.getGeofenceReportOperationCompleted == null)) {
                this.getGeofenceReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGeofenceReportOperationCompleted);
            }
            this.InvokeAsync("getGeofenceReport", new object[] {
                        param,
                        FromD,
                        ToD}, this.getGeofenceReportOperationCompleted, userState);
        }
        
        private void OngetGeofenceReportOperationCompleted(object arg) {
            if ((this.getGeofenceReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGeofenceReportCompleted(this, new getGeofenceReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getVehicleEventStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getVehicleEventStatus(string param, string FromD, string ToD) {
            object[] results = this.Invoke("getVehicleEventStatus", new object[] {
                        param,
                        FromD,
                        ToD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVehicleEventStatusAsync(string param, string FromD, string ToD) {
            this.getVehicleEventStatusAsync(param, FromD, ToD, null);
        }
        
        /// <remarks/>
        public void getVehicleEventStatusAsync(string param, string FromD, string ToD, object userState) {
            if ((this.getVehicleEventStatusOperationCompleted == null)) {
                this.getVehicleEventStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVehicleEventStatusOperationCompleted);
            }
            this.InvokeAsync("getVehicleEventStatus", new object[] {
                        param,
                        FromD,
                        ToD}, this.getVehicleEventStatusOperationCompleted, userState);
        }
        
        private void OngetVehicleEventStatusOperationCompleted(object arg) {
            if ((this.getVehicleEventStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVehicleEventStatusCompleted(this, new getVehicleEventStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getVehicleSpeedStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getVehicleSpeedStatus(string param, string FromD, string ToD, string InpSpeed) {
            object[] results = this.Invoke("getVehicleSpeedStatus", new object[] {
                        param,
                        FromD,
                        ToD,
                        InpSpeed});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVehicleSpeedStatusAsync(string param, string FromD, string ToD, string InpSpeed) {
            this.getVehicleSpeedStatusAsync(param, FromD, ToD, InpSpeed, null);
        }
        
        /// <remarks/>
        public void getVehicleSpeedStatusAsync(string param, string FromD, string ToD, string InpSpeed, object userState) {
            if ((this.getVehicleSpeedStatusOperationCompleted == null)) {
                this.getVehicleSpeedStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVehicleSpeedStatusOperationCompleted);
            }
            this.InvokeAsync("getVehicleSpeedStatus", new object[] {
                        param,
                        FromD,
                        ToD,
                        InpSpeed}, this.getVehicleSpeedStatusOperationCompleted, userState);
        }
        
        private void OngetVehicleSpeedStatusOperationCompleted(object arg) {
            if ((this.getVehicleSpeedStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVehicleSpeedStatusCompleted(this, new getVehicleSpeedStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboadStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DashboadStatus() {
            object[] results = this.Invoke("DashboadStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DashboadStatusAsync() {
            this.DashboadStatusAsync(null);
        }
        
        /// <remarks/>
        public void DashboadStatusAsync(object userState) {
            if ((this.DashboadStatusOperationCompleted == null)) {
                this.DashboadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDashboadStatusOperationCompleted);
            }
            this.InvokeAsync("DashboadStatus", new object[0], this.DashboadStatusOperationCompleted, userState);
        }
        
        private void OnDashboadStatusOperationCompleted(object arg) {
            if ((this.DashboadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DashboadStatusCompleted(this, new DashboadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashBoradSpeedAlert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DashBoradSpeedAlert(string SelGroup) {
            object[] results = this.Invoke("DashBoradSpeedAlert", new object[] {
                        SelGroup});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DashBoradSpeedAlertAsync(string SelGroup) {
            this.DashBoradSpeedAlertAsync(SelGroup, null);
        }
        
        /// <remarks/>
        public void DashBoradSpeedAlertAsync(string SelGroup, object userState) {
            if ((this.DashBoradSpeedAlertOperationCompleted == null)) {
                this.DashBoradSpeedAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDashBoradSpeedAlertOperationCompleted);
            }
            this.InvokeAsync("DashBoradSpeedAlert", new object[] {
                        SelGroup}, this.DashBoradSpeedAlertOperationCompleted, userState);
        }
        
        private void OnDashBoradSpeedAlertOperationCompleted(object arg) {
            if ((this.DashBoradSpeedAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DashBoradSpeedAlertCompleted(this, new DashBoradSpeedAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployees", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmployees() {
            object[] results = this.Invoke("GetEmployees", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeesAsync() {
            this.GetEmployeesAsync(null);
        }
        
        /// <remarks/>
        public void GetEmployeesAsync(object userState) {
            if ((this.GetEmployeesOperationCompleted == null)) {
                this.GetEmployeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeesOperationCompleted);
            }
            this.InvokeAsync("GetEmployees", new object[0], this.GetEmployeesOperationCompleted, userState);
        }
        
        private void OnGetEmployeesOperationCompleted(object arg) {
            if ((this.GetEmployeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeesCompleted(this, new GetEmployeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetlocationByWaybill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetlocationByWaybill(string waybillno) {
            object[] results = this.Invoke("GetlocationByWaybill", new object[] {
                        waybillno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetlocationByWaybillAsync(string waybillno) {
            this.GetlocationByWaybillAsync(waybillno, null);
        }
        
        /// <remarks/>
        public void GetlocationByWaybillAsync(string waybillno, object userState) {
            if ((this.GetlocationByWaybillOperationCompleted == null)) {
                this.GetlocationByWaybillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetlocationByWaybillOperationCompleted);
            }
            this.InvokeAsync("GetlocationByWaybill", new object[] {
                        waybillno}, this.GetlocationByWaybillOperationCompleted, userState);
        }
        
        private void OnGetlocationByWaybillOperationCompleted(object arg) {
            if ((this.GetlocationByWaybillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetlocationByWaybillCompleted(this, new GetlocationByWaybillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentLOcationByWaybill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentLOcationByWaybill(string waybillno) {
            object[] results = this.Invoke("GetCurrentLOcationByWaybill", new object[] {
                        waybillno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentLOcationByWaybillAsync(string waybillno) {
            this.GetCurrentLOcationByWaybillAsync(waybillno, null);
        }
        
        /// <remarks/>
        public void GetCurrentLOcationByWaybillAsync(string waybillno, object userState) {
            if ((this.GetCurrentLOcationByWaybillOperationCompleted == null)) {
                this.GetCurrentLOcationByWaybillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentLOcationByWaybillOperationCompleted);
            }
            this.InvokeAsync("GetCurrentLOcationByWaybill", new object[] {
                        waybillno}, this.GetCurrentLOcationByWaybillOperationCompleted, userState);
        }
        
        private void OnGetCurrentLOcationByWaybillOperationCompleted(object arg) {
            if ((this.GetCurrentLOcationByWaybillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentLOcationByWaybillCompleted(this, new GetCurrentLOcationByWaybillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetlocationByTripID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetlocationByTripID(int tripid) {
            object[] results = this.Invoke("GetlocationByTripID", new object[] {
                        tripid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetlocationByTripIDAsync(int tripid) {
            this.GetlocationByTripIDAsync(tripid, null);
        }
        
        /// <remarks/>
        public void GetlocationByTripIDAsync(int tripid, object userState) {
            if ((this.GetlocationByTripIDOperationCompleted == null)) {
                this.GetlocationByTripIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetlocationByTripIDOperationCompleted);
            }
            this.InvokeAsync("GetlocationByTripID", new object[] {
                        tripid}, this.GetlocationByTripIDOperationCompleted, userState);
        }
        
        private void OnGetlocationByTripIDOperationCompleted(object arg) {
            if ((this.GetlocationByTripIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetlocationByTripIDCompleted(this, new GetlocationByTripIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTripDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTripDetails(string truckno) {
            object[] results = this.Invoke("GetTripDetails", new object[] {
                        truckno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTripDetailsAsync(string truckno) {
            this.GetTripDetailsAsync(truckno, null);
        }
        
        /// <remarks/>
        public void GetTripDetailsAsync(string truckno, object userState) {
            if ((this.GetTripDetailsOperationCompleted == null)) {
                this.GetTripDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTripDetailsOperationCompleted);
            }
            this.InvokeAsync("GetTripDetails", new object[] {
                        truckno}, this.GetTripDetailsOperationCompleted, userState);
        }
        
        private void OnGetTripDetailsOperationCompleted(object arg) {
            if ((this.GetTripDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTripDetailsCompleted(this, new GetTripDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliverySheetDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeliverySheetDetails(string FromDate, string ToDate, string TName, bool Istruck) {
            object[] results = this.Invoke("GetDeliverySheetDetails", new object[] {
                        FromDate,
                        ToDate,
                        TName,
                        Istruck});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliverySheetDetailsAsync(string FromDate, string ToDate, string TName, bool Istruck) {
            this.GetDeliverySheetDetailsAsync(FromDate, ToDate, TName, Istruck, null);
        }
        
        /// <remarks/>
        public void GetDeliverySheetDetailsAsync(string FromDate, string ToDate, string TName, bool Istruck, object userState) {
            if ((this.GetDeliverySheetDetailsOperationCompleted == null)) {
                this.GetDeliverySheetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliverySheetDetailsOperationCompleted);
            }
            this.InvokeAsync("GetDeliverySheetDetails", new object[] {
                        FromDate,
                        ToDate,
                        TName,
                        Istruck}, this.GetDeliverySheetDetailsOperationCompleted, userState);
        }
        
        private void OnGetDeliverySheetDetailsOperationCompleted(object arg) {
            if ((this.GetDeliverySheetDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliverySheetDetailsCompleted(this, new GetDeliverySheetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliverySheetDetailsWithCname", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeliverySheetDetailsWithCname(string FromDate, string ToDate, string TTName, bool Istruck) {
            object[] results = this.Invoke("GetDeliverySheetDetailsWithCname", new object[] {
                        FromDate,
                        ToDate,
                        TTName,
                        Istruck});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliverySheetDetailsWithCnameAsync(string FromDate, string ToDate, string TTName, bool Istruck) {
            this.GetDeliverySheetDetailsWithCnameAsync(FromDate, ToDate, TTName, Istruck, null);
        }
        
        /// <remarks/>
        public void GetDeliverySheetDetailsWithCnameAsync(string FromDate, string ToDate, string TTName, bool Istruck, object userState) {
            if ((this.GetDeliverySheetDetailsWithCnameOperationCompleted == null)) {
                this.GetDeliverySheetDetailsWithCnameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliverySheetDetailsWithCnameOperationCompleted);
            }
            this.InvokeAsync("GetDeliverySheetDetailsWithCname", new object[] {
                        FromDate,
                        ToDate,
                        TTName,
                        Istruck}, this.GetDeliverySheetDetailsWithCnameOperationCompleted, userState);
        }
        
        private void OnGetDeliverySheetDetailsWithCnameOperationCompleted(object arg) {
            if ((this.GetDeliverySheetDetailsWithCnameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliverySheetDetailsWithCnameCompleted(this, new GetDeliverySheetDetailsWithCnameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTotalTripDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTotalTripDetails() {
            object[] results = this.Invoke("GetTotalTripDetails", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalTripDetailsAsync() {
            this.GetTotalTripDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetTotalTripDetailsAsync(object userState) {
            if ((this.GetTotalTripDetailsOperationCompleted == null)) {
                this.GetTotalTripDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalTripDetailsOperationCompleted);
            }
            this.InvokeAsync("GetTotalTripDetails", new object[0], this.GetTotalTripDetailsOperationCompleted, userState);
        }
        
        private void OnGetTotalTripDetailsOperationCompleted(object arg) {
            if ((this.GetTotalTripDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalTripDetailsCompleted(this, new GetTotalTripDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTotalWashedDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTotalWashedDetails() {
            object[] results = this.Invoke("GetTotalWashedDetails", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalWashedDetailsAsync() {
            this.GetTotalWashedDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetTotalWashedDetailsAsync(object userState) {
            if ((this.GetTotalWashedDetailsOperationCompleted == null)) {
                this.GetTotalWashedDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalWashedDetailsOperationCompleted);
            }
            this.InvokeAsync("GetTotalWashedDetails", new object[0], this.GetTotalWashedDetailsOperationCompleted, userState);
        }
        
        private void OnGetTotalWashedDetailsOperationCompleted(object arg) {
            if ((this.GetTotalWashedDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalWashedDetailsCompleted(this, new GetTotalWashedDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBreakdownDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBreakdownDetails() {
            object[] results = this.Invoke("GetBreakdownDetails", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBreakdownDetailsAsync() {
            this.GetBreakdownDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetBreakdownDetailsAsync(object userState) {
            if ((this.GetBreakdownDetailsOperationCompleted == null)) {
                this.GetBreakdownDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBreakdownDetailsOperationCompleted);
            }
            this.InvokeAsync("GetBreakdownDetails", new object[0], this.GetBreakdownDetailsOperationCompleted, userState);
        }
        
        private void OnGetBreakdownDetailsOperationCompleted(object arg) {
            if ((this.GetBreakdownDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBreakdownDetailsCompleted(this, new GetBreakdownDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IdlleCumulative", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IdlleCumulative(string Rptfilter, string deviceid, string FromD, string ToD) {
            object[] results = this.Invoke("IdlleCumulative", new object[] {
                        Rptfilter,
                        deviceid,
                        FromD,
                        ToD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IdlleCumulativeAsync(string Rptfilter, string deviceid, string FromD, string ToD) {
            this.IdlleCumulativeAsync(Rptfilter, deviceid, FromD, ToD, null);
        }
        
        /// <remarks/>
        public void IdlleCumulativeAsync(string Rptfilter, string deviceid, string FromD, string ToD, object userState) {
            if ((this.IdlleCumulativeOperationCompleted == null)) {
                this.IdlleCumulativeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIdlleCumulativeOperationCompleted);
            }
            this.InvokeAsync("IdlleCumulative", new object[] {
                        Rptfilter,
                        deviceid,
                        FromD,
                        ToD}, this.IdlleCumulativeOperationCompleted, userState);
        }
        
        private void OnIdlleCumulativeOperationCompleted(object arg) {
            if ((this.IdlleCumulativeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IdlleCumulativeCompleted(this, new IdlleCumulativeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IdlleCumulativeByGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IdlleCumulativeByGroup(string Rptfilter, string group, string FromD, string ToD) {
            object[] results = this.Invoke("IdlleCumulativeByGroup", new object[] {
                        Rptfilter,
                        group,
                        FromD,
                        ToD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IdlleCumulativeByGroupAsync(string Rptfilter, string group, string FromD, string ToD) {
            this.IdlleCumulativeByGroupAsync(Rptfilter, group, FromD, ToD, null);
        }
        
        /// <remarks/>
        public void IdlleCumulativeByGroupAsync(string Rptfilter, string group, string FromD, string ToD, object userState) {
            if ((this.IdlleCumulativeByGroupOperationCompleted == null)) {
                this.IdlleCumulativeByGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIdlleCumulativeByGroupOperationCompleted);
            }
            this.InvokeAsync("IdlleCumulativeByGroup", new object[] {
                        Rptfilter,
                        group,
                        FromD,
                        ToD}, this.IdlleCumulativeByGroupOperationCompleted, userState);
        }
        
        private void OnIdlleCumulativeByGroupOperationCompleted(object arg) {
            if ((this.IdlleCumulativeByGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IdlleCumulativeByGroupCompleted(this, new IdlleCumulativeByGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoIdlleCumulativeByGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AutoIdlleCumulativeByGroup(string Rptfilter, string group, string FromD, string ToD) {
            object[] results = this.Invoke("AutoIdlleCumulativeByGroup", new object[] {
                        Rptfilter,
                        group,
                        FromD,
                        ToD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AutoIdlleCumulativeByGroupAsync(string Rptfilter, string group, string FromD, string ToD) {
            this.AutoIdlleCumulativeByGroupAsync(Rptfilter, group, FromD, ToD, null);
        }
        
        /// <remarks/>
        public void AutoIdlleCumulativeByGroupAsync(string Rptfilter, string group, string FromD, string ToD, object userState) {
            if ((this.AutoIdlleCumulativeByGroupOperationCompleted == null)) {
                this.AutoIdlleCumulativeByGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoIdlleCumulativeByGroupOperationCompleted);
            }
            this.InvokeAsync("AutoIdlleCumulativeByGroup", new object[] {
                        Rptfilter,
                        group,
                        FromD,
                        ToD}, this.AutoIdlleCumulativeByGroupOperationCompleted, userState);
        }
        
        private void OnAutoIdlleCumulativeByGroupOperationCompleted(object arg) {
            if ((this.AutoIdlleCumulativeByGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoIdlleCumulativeByGroupCompleted(this, new AutoIdlleCumulativeByGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeMaster", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetEmployeeMaster() {
            object[] results = this.Invoke("GetEmployeeMaster", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeMasterAsync() {
            this.GetEmployeeMasterAsync(null);
        }
        
        /// <remarks/>
        public void GetEmployeeMasterAsync(object userState) {
            if ((this.GetEmployeeMasterOperationCompleted == null)) {
                this.GetEmployeeMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeMasterOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeMaster", new object[0], this.GetEmployeeMasterOperationCompleted, userState);
        }
        
        private void OnGetEmployeeMasterOperationCompleted(object arg) {
            if ((this.GetEmployeeMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeMasterCompleted(this, new GetEmployeeMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeePhotoByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmployeePhotoByID(string empid) {
            object[] results = this.Invoke("GetEmployeePhotoByID", new object[] {
                        empid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeePhotoByIDAsync(string empid) {
            this.GetEmployeePhotoByIDAsync(empid, null);
        }
        
        /// <remarks/>
        public void GetEmployeePhotoByIDAsync(string empid, object userState) {
            if ((this.GetEmployeePhotoByIDOperationCompleted == null)) {
                this.GetEmployeePhotoByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeePhotoByIDOperationCompleted);
            }
            this.InvokeAsync("GetEmployeePhotoByID", new object[] {
                        empid}, this.GetEmployeePhotoByIDOperationCompleted, userState);
        }
        
        private void OnGetEmployeePhotoByIDOperationCompleted(object arg) {
            if ((this.GetEmployeePhotoByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeePhotoByIDCompleted(this, new GetEmployeePhotoByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeviceMaster", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDeviceMaster() {
            object[] results = this.Invoke("GetDeviceMaster", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeviceMasterAsync() {
            this.GetDeviceMasterAsync(null);
        }
        
        /// <remarks/>
        public void GetDeviceMasterAsync(object userState) {
            if ((this.GetDeviceMasterOperationCompleted == null)) {
                this.GetDeviceMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceMasterOperationCompleted);
            }
            this.InvokeAsync("GetDeviceMaster", new object[0], this.GetDeviceMasterOperationCompleted, userState);
        }
        
        private void OnGetDeviceMasterOperationCompleted(object arg) {
            if ((this.GetDeviceMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeviceMasterCompleted(this, new GetDeviceMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CumulativeWorking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CumulativeWorking(string Rptfilter, string deviceid, string FromD, string ToD) {
            object[] results = this.Invoke("CumulativeWorking", new object[] {
                        Rptfilter,
                        deviceid,
                        FromD,
                        ToD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CumulativeWorkingAsync(string Rptfilter, string deviceid, string FromD, string ToD) {
            this.CumulativeWorkingAsync(Rptfilter, deviceid, FromD, ToD, null);
        }
        
        /// <remarks/>
        public void CumulativeWorkingAsync(string Rptfilter, string deviceid, string FromD, string ToD, object userState) {
            if ((this.CumulativeWorkingOperationCompleted == null)) {
                this.CumulativeWorkingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCumulativeWorkingOperationCompleted);
            }
            this.InvokeAsync("CumulativeWorking", new object[] {
                        Rptfilter,
                        deviceid,
                        FromD,
                        ToD}, this.CumulativeWorkingOperationCompleted, userState);
        }
        
        private void OnCumulativeWorkingOperationCompleted(object arg) {
            if ((this.CumulativeWorkingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CumulativeWorkingCompleted(this, new CumulativeWorkingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendSMS(string MobileNo, string Message) {
            this.Invoke("SendSMS", new object[] {
                        MobileNo,
                        Message});
        }
        
        /// <remarks/>
        public void SendSMSAsync(string MobileNo, string Message) {
            this.SendSMSAsync(MobileNo, Message, null);
        }
        
        /// <remarks/>
        public void SendSMSAsync(string MobileNo, string Message, object userState) {
            if ((this.SendSMSOperationCompleted == null)) {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        MobileNo,
                        Message}, this.SendSMSOperationCompleted, userState);
        }
        
        private void OnSendSMSOperationCompleted(object arg) {
            if ((this.SendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentLocatation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentLocatation(string truckno) {
            object[] results = this.Invoke("GetCurrentLocatation", new object[] {
                        truckno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentLocatationAsync(string truckno) {
            this.GetCurrentLocatationAsync(truckno, null);
        }
        
        /// <remarks/>
        public void GetCurrentLocatationAsync(string truckno, object userState) {
            if ((this.GetCurrentLocatationOperationCompleted == null)) {
                this.GetCurrentLocatationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentLocatationOperationCompleted);
            }
            this.InvokeAsync("GetCurrentLocatation", new object[] {
                        truckno}, this.GetCurrentLocatationOperationCompleted, userState);
        }
        
        private void OnGetCurrentLocatationOperationCompleted(object arg) {
            if ((this.GetCurrentLocatationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentLocatationCompleted(this, new GetCurrentLocatationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFleetDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFleetDetails(string truckno) {
            object[] results = this.Invoke("GetFleetDetails", new object[] {
                        truckno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFleetDetailsAsync(string truckno) {
            this.GetFleetDetailsAsync(truckno, null);
        }
        
        /// <remarks/>
        public void GetFleetDetailsAsync(string truckno, object userState) {
            if ((this.GetFleetDetailsOperationCompleted == null)) {
                this.GetFleetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFleetDetailsOperationCompleted);
            }
            this.InvokeAsync("GetFleetDetails", new object[] {
                        truckno}, this.GetFleetDetailsOperationCompleted, userState);
        }
        
        private void OnGetFleetDetailsOperationCompleted(object arg) {
            if ((this.GetFleetDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFleetDetailsCompleted(this, new GetFleetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGeofenceAlert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateGeofenceAlert() {
            object[] results = this.Invoke("UpdateGeofenceAlert", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGeofenceAlertAsync() {
            this.UpdateGeofenceAlertAsync(null);
        }
        
        /// <remarks/>
        public void UpdateGeofenceAlertAsync(object userState) {
            if ((this.UpdateGeofenceAlertOperationCompleted == null)) {
                this.UpdateGeofenceAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGeofenceAlertOperationCompleted);
            }
            this.InvokeAsync("UpdateGeofenceAlert", new object[0], this.UpdateGeofenceAlertOperationCompleted, userState);
        }
        
        private void OnUpdateGeofenceAlertOperationCompleted(object arg) {
            if ((this.UpdateGeofenceAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGeofenceAlertCompleted(this, new UpdateGeofenceAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGeofenceLocationName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGeofenceLocationName(Geofence[] items, string Latitude, string Longitude) {
            object[] results = this.Invoke("GetGeofenceLocationName", new object[] {
                        items,
                        Latitude,
                        Longitude});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGeofenceLocationNameAsync(Geofence[] items, string Latitude, string Longitude) {
            this.GetGeofenceLocationNameAsync(items, Latitude, Longitude, null);
        }
        
        /// <remarks/>
        public void GetGeofenceLocationNameAsync(Geofence[] items, string Latitude, string Longitude, object userState) {
            if ((this.GetGeofenceLocationNameOperationCompleted == null)) {
                this.GetGeofenceLocationNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeofenceLocationNameOperationCompleted);
            }
            this.InvokeAsync("GetGeofenceLocationName", new object[] {
                        items,
                        Latitude,
                        Longitude}, this.GetGeofenceLocationNameOperationCompleted, userState);
        }
        
        private void OnGetGeofenceLocationNameOperationCompleted(object arg) {
            if ((this.GetGeofenceLocationNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeofenceLocationNameCompleted(this, new GetGeofenceLocationNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocationName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLocationName(Geofence[] items, string Latitude, string Longitude) {
            object[] results = this.Invoke("GetLocationName", new object[] {
                        items,
                        Latitude,
                        Longitude});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationNameAsync(Geofence[] items, string Latitude, string Longitude) {
            this.GetLocationNameAsync(items, Latitude, Longitude, null);
        }
        
        /// <remarks/>
        public void GetLocationNameAsync(Geofence[] items, string Latitude, string Longitude, object userState) {
            if ((this.GetLocationNameOperationCompleted == null)) {
                this.GetLocationNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationNameOperationCompleted);
            }
            this.InvokeAsync("GetLocationName", new object[] {
                        items,
                        Latitude,
                        Longitude}, this.GetLocationNameOperationCompleted, userState);
        }
        
        private void OnGetLocationNameOperationCompleted(object arg) {
            if ((this.GetLocationNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationNameCompleted(this, new GetLocationNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReverseGeoLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReverseGeoLoc(string longitude, string latitude) {
            object[] results = this.Invoke("ReverseGeoLoc", new object[] {
                        longitude,
                        latitude});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReverseGeoLocAsync(string longitude, string latitude) {
            this.ReverseGeoLocAsync(longitude, latitude, null);
        }
        
        /// <remarks/>
        public void ReverseGeoLocAsync(string longitude, string latitude, object userState) {
            if ((this.ReverseGeoLocOperationCompleted == null)) {
                this.ReverseGeoLocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseGeoLocOperationCompleted);
            }
            this.InvokeAsync("ReverseGeoLoc", new object[] {
                        longitude,
                        latitude}, this.ReverseGeoLocOperationCompleted, userState);
        }
        
        private void OnReverseGeoLocOperationCompleted(object arg) {
            if ((this.ReverseGeoLocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseGeoLocCompleted(this, new ReverseGeoLocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsPresentInGeofenceCircle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsPresentInGeofenceCircle(string data, string _LatLng) {
            object[] results = this.Invoke("IsPresentInGeofenceCircle", new object[] {
                        data,
                        _LatLng});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsPresentInGeofenceCircleAsync(string data, string _LatLng) {
            this.IsPresentInGeofenceCircleAsync(data, _LatLng, null);
        }
        
        /// <remarks/>
        public void IsPresentInGeofenceCircleAsync(string data, string _LatLng, object userState) {
            if ((this.IsPresentInGeofenceCircleOperationCompleted == null)) {
                this.IsPresentInGeofenceCircleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsPresentInGeofenceCircleOperationCompleted);
            }
            this.InvokeAsync("IsPresentInGeofenceCircle", new object[] {
                        data,
                        _LatLng}, this.IsPresentInGeofenceCircleOperationCompleted, userState);
        }
        
        private void OnIsPresentInGeofenceCircleOperationCompleted(object arg) {
            if ((this.IsPresentInGeofenceCircleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsPresentInGeofenceCircleCompleted(this, new IsPresentInGeofenceCircleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsPresentInGeofencePolygon", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsPresentInGeofencePolygon(string data, string _LatLng) {
            object[] results = this.Invoke("IsPresentInGeofencePolygon", new object[] {
                        data,
                        _LatLng});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsPresentInGeofencePolygonAsync(string data, string _LatLng) {
            this.IsPresentInGeofencePolygonAsync(data, _LatLng, null);
        }
        
        /// <remarks/>
        public void IsPresentInGeofencePolygonAsync(string data, string _LatLng, object userState) {
            if ((this.IsPresentInGeofencePolygonOperationCompleted == null)) {
                this.IsPresentInGeofencePolygonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsPresentInGeofencePolygonOperationCompleted);
            }
            this.InvokeAsync("IsPresentInGeofencePolygon", new object[] {
                        data,
                        _LatLng}, this.IsPresentInGeofencePolygonOperationCompleted, userState);
        }
        
        private void OnIsPresentInGeofencePolygonOperationCompleted(object arg) {
            if ((this.IsPresentInGeofencePolygonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsPresentInGeofencePolygonCompleted(this, new IsPresentInGeofencePolygonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Geofence {
        
        private int idField;
        
        private string labelField;
        
        private string iconField;
        
        private string colorField;
        
        private string geotypeField;
        
        private string locationsField;
        
        private string geoShapeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public string Icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        public string Geotype {
            get {
                return this.geotypeField;
            }
            set {
                this.geotypeField = value;
            }
        }
        
        /// <remarks/>
        public string Locations {
            get {
                return this.locationsField;
            }
            set {
                this.locationsField = value;
            }
        }
        
        /// <remarks/>
        public string GeoShape {
            get {
                return this.geoShapeField;
            }
            set {
                this.geoShapeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void LogoutCompletedEventHandler(object sender, LogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSpeedAlertsCompletedEventHandler(object sender, GetSpeedAlertsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpeedAlertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpeedAlertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void getGeofenceReportCompletedEventHandler(object sender, getGeofenceReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGeofenceReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGeofenceReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void getVehicleEventStatusCompletedEventHandler(object sender, getVehicleEventStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVehicleEventStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVehicleEventStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void getVehicleSpeedStatusCompletedEventHandler(object sender, getVehicleSpeedStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVehicleSpeedStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVehicleSpeedStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DashboadStatusCompletedEventHandler(object sender, DashboadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DashboadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DashboadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DashBoradSpeedAlertCompletedEventHandler(object sender, DashBoradSpeedAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DashBoradSpeedAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DashBoradSpeedAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEmployeesCompletedEventHandler(object sender, GetEmployeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetlocationByWaybillCompletedEventHandler(object sender, GetlocationByWaybillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetlocationByWaybillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetlocationByWaybillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCurrentLOcationByWaybillCompletedEventHandler(object sender, GetCurrentLOcationByWaybillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentLOcationByWaybillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentLOcationByWaybillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetlocationByTripIDCompletedEventHandler(object sender, GetlocationByTripIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetlocationByTripIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetlocationByTripIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTripDetailsCompletedEventHandler(object sender, GetTripDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTripDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTripDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDeliverySheetDetailsCompletedEventHandler(object sender, GetDeliverySheetDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliverySheetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliverySheetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDeliverySheetDetailsWithCnameCompletedEventHandler(object sender, GetDeliverySheetDetailsWithCnameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliverySheetDetailsWithCnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliverySheetDetailsWithCnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTotalTripDetailsCompletedEventHandler(object sender, GetTotalTripDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalTripDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalTripDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTotalWashedDetailsCompletedEventHandler(object sender, GetTotalWashedDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalWashedDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalWashedDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBreakdownDetailsCompletedEventHandler(object sender, GetBreakdownDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBreakdownDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBreakdownDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void IdlleCumulativeCompletedEventHandler(object sender, IdlleCumulativeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IdlleCumulativeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IdlleCumulativeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void IdlleCumulativeByGroupCompletedEventHandler(object sender, IdlleCumulativeByGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IdlleCumulativeByGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IdlleCumulativeByGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AutoIdlleCumulativeByGroupCompletedEventHandler(object sender, AutoIdlleCumulativeByGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoIdlleCumulativeByGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoIdlleCumulativeByGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEmployeeMasterCompletedEventHandler(object sender, GetEmployeeMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEmployeePhotoByIDCompletedEventHandler(object sender, GetEmployeePhotoByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeePhotoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeePhotoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDeviceMasterCompletedEventHandler(object sender, GetDeviceMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeviceMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeviceMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CumulativeWorkingCompletedEventHandler(object sender, CumulativeWorkingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CumulativeWorkingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CumulativeWorkingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendSMSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCurrentLocatationCompletedEventHandler(object sender, GetCurrentLocatationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentLocatationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentLocatationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFleetDetailsCompletedEventHandler(object sender, GetFleetDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFleetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFleetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateGeofenceAlertCompletedEventHandler(object sender, UpdateGeofenceAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGeofenceAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGeofenceAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetGeofenceLocationNameCompletedEventHandler(object sender, GetGeofenceLocationNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeofenceLocationNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeofenceLocationNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLocationNameCompletedEventHandler(object sender, GetLocationNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReverseGeoLocCompletedEventHandler(object sender, ReverseGeoLocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseGeoLocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseGeoLocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void IsPresentInGeofenceCircleCompletedEventHandler(object sender, IsPresentInGeofenceCircleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsPresentInGeofenceCircleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsPresentInGeofenceCircleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void IsPresentInGeofencePolygonCompletedEventHandler(object sender, IsPresentInGeofencePolygonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsPresentInGeofencePolygonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsPresentInGeofencePolygonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591