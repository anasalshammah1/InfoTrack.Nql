#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InfoTrack.NaqelAPI.App_Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ERPCourierSE")]
	public partial class HHDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPickUp(PickUp instance);
    partial void UpdatePickUp(PickUp instance);
    partial void DeletePickUp(PickUp instance);
    partial void InsertPickUpDetail(PickUpDetail instance);
    partial void UpdatePickUpDetail(PickUpDetail instance);
    partial void DeletePickUpDetail(PickUpDetail instance);
    partial void InsertUserMeLogin(UserMeLogin instance);
    partial void UpdateUserMeLogin(UserMeLogin instance);
    partial void DeleteUserMeLogin(UserMeLogin instance);
    partial void InsertOnDeliveryDetail(OnDeliveryDetail instance);
    partial void UpdateOnDeliveryDetail(OnDeliveryDetail instance);
    partial void DeleteOnDeliveryDetail(OnDeliveryDetail instance);
    partial void InsertNotDelivered(NotDelivered instance);
    partial void UpdateNotDelivered(NotDelivered instance);
    partial void DeleteNotDelivered(NotDelivered instance);
    partial void InsertNotDeliveredDetail(NotDeliveredDetail instance);
    partial void UpdateNotDeliveredDetail(NotDeliveredDetail instance);
    partial void DeleteNotDeliveredDetail(NotDeliveredDetail instance);
    partial void InsertOnCloadingForD(OnCloadingForD instance);
    partial void UpdateOnCloadingForD(OnCloadingForD instance);
    partial void DeleteOnCloadingForD(OnCloadingForD instance);
    partial void InsertOnCLoadingForDDetail(OnCLoadingForDDetail instance);
    partial void UpdateOnCLoadingForDDetail(OnCLoadingForDDetail instance);
    partial void DeleteOnCLoadingForDDetail(OnCLoadingForDDetail instance);
    partial void InsertOnCLoadingForDWaybill(OnCLoadingForDWaybill instance);
    partial void UpdateOnCLoadingForDWaybill(OnCLoadingForDWaybill instance);
    partial void DeleteOnCLoadingForDWaybill(OnCLoadingForDWaybill instance);
    partial void InsertOnDelivery(OnDelivery instance);
    partial void UpdateOnDelivery(OnDelivery instance);
    partial void DeleteOnDelivery(OnDelivery instance);
    partial void InsertCheckPoint(CheckPoint instance);
    partial void UpdateCheckPoint(CheckPoint instance);
    partial void DeleteCheckPoint(CheckPoint instance);
    partial void InsertCheckPointWaybillDetail(CheckPointWaybillDetail instance);
    partial void UpdateCheckPointWaybillDetail(CheckPointWaybillDetail instance);
    partial void DeleteCheckPointWaybillDetail(CheckPointWaybillDetail instance);
    #endregion
		
		public HHDDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ERPCourierSEConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HHDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HHDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HHDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HHDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PickUp> PickUps
		{
			get
			{
				return this.GetTable<PickUp>();
			}
		}
		
		public System.Data.Linq.Table<PickUpDetail> PickUpDetails
		{
			get
			{
				return this.GetTable<PickUpDetail>();
			}
		}
		
		public System.Data.Linq.Table<UserMeLogin> UserMeLogins
		{
			get
			{
				return this.GetTable<UserMeLogin>();
			}
		}
		
		public System.Data.Linq.Table<OnDeliveryDetail> OnDeliveryDetails
		{
			get
			{
				return this.GetTable<OnDeliveryDetail>();
			}
		}
		
		public System.Data.Linq.Table<NotDelivered> NotDelivereds
		{
			get
			{
				return this.GetTable<NotDelivered>();
			}
		}
		
		public System.Data.Linq.Table<NotDeliveredDetail> NotDeliveredDetails
		{
			get
			{
				return this.GetTable<NotDeliveredDetail>();
			}
		}
		
		public System.Data.Linq.Table<OnCloadingForD> OnCloadingForDs
		{
			get
			{
				return this.GetTable<OnCloadingForD>();
			}
		}
		
		public System.Data.Linq.Table<OnCLoadingForDDetail> OnCLoadingForDDetails
		{
			get
			{
				return this.GetTable<OnCLoadingForDDetail>();
			}
		}
		
		public System.Data.Linq.Table<OnCLoadingForDWaybill> OnCLoadingForDWaybills
		{
			get
			{
				return this.GetTable<OnCLoadingForDWaybill>();
			}
		}
		
		public System.Data.Linq.Table<OnDelivery> OnDeliveries
		{
			get
			{
				return this.GetTable<OnDelivery>();
			}
		}
		
		public System.Data.Linq.Table<CheckPoint> CheckPoints
		{
			get
			{
				return this.GetTable<CheckPoint>();
			}
		}
		
		public System.Data.Linq.Table<CheckPointWaybillDetail> CheckPointWaybillDetails
		{
			get
			{
				return this.GetTable<CheckPointWaybillDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PickUp")]
	public partial class PickUp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WaybillNo;
		
		private System.Nullable<int> _ClientID;
		
		private int _FromStationID;
		
		private int _ToStationID;
		
		private int _PieceCount;
		
		private System.Nullable<double> _Weight;
		
		private System.DateTime _TimeIn;
		
		private System.DateTime _TimeOut;
		
		private int _ID;
		
		private bool _IsSync;
		
		private int _UserID;
		
		private int _StationID;
		
		private string _RefNo;
		
		private string _CurrentVersion;
		
		private System.Nullable<bool> _IsServerTime;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private System.Nullable<double> _ReceivedAmt;
		
		private string _ReceiptNo;
		
		private System.Nullable<bool> _IsManual;
		
		private System.Nullable<int> _StopPointsID;
		
		private EntitySet<PickUpDetail> _PickUpDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWaybillNoChanging(string value);
    partial void OnWaybillNoChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    partial void OnFromStationIDChanging(int value);
    partial void OnFromStationIDChanged();
    partial void OnToStationIDChanging(int value);
    partial void OnToStationIDChanged();
    partial void OnPieceCountChanging(int value);
    partial void OnPieceCountChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnTimeInChanging(System.DateTime value);
    partial void OnTimeInChanged();
    partial void OnTimeOutChanging(System.DateTime value);
    partial void OnTimeOutChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIsSyncChanging(bool value);
    partial void OnIsSyncChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnStationIDChanging(int value);
    partial void OnStationIDChanged();
    partial void OnRefNoChanging(string value);
    partial void OnRefNoChanged();
    partial void OnCurrentVersionChanging(string value);
    partial void OnCurrentVersionChanged();
    partial void OnIsServerTimeChanging(System.Nullable<bool> value);
    partial void OnIsServerTimeChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnReceivedAmtChanging(System.Nullable<double> value);
    partial void OnReceivedAmtChanged();
    partial void OnReceiptNoChanging(string value);
    partial void OnReceiptNoChanged();
    partial void OnIsManualChanging(System.Nullable<bool> value);
    partial void OnIsManualChanged();
    partial void OnStopPointsIDChanging(System.Nullable<int> value);
    partial void OnStopPointsIDChanged();
    #endregion
		
		public PickUp()
		{
			this._PickUpDetails = new EntitySet<PickUpDetail>(new Action<PickUpDetail>(this.attach_PickUpDetails), new Action<PickUpDetail>(this.detach_PickUpDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string WaybillNo
		{
			get
			{
				return this._WaybillNo;
			}
			set
			{
				if ((this._WaybillNo != value))
				{
					this.OnWaybillNoChanging(value);
					this.SendPropertyChanging();
					this._WaybillNo = value;
					this.SendPropertyChanged("WaybillNo");
					this.OnWaybillNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int")]
		public System.Nullable<int> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStationID", DbType="Int NOT NULL")]
		public int FromStationID
		{
			get
			{
				return this._FromStationID;
			}
			set
			{
				if ((this._FromStationID != value))
				{
					this.OnFromStationIDChanging(value);
					this.SendPropertyChanging();
					this._FromStationID = value;
					this.SendPropertyChanged("FromStationID");
					this.OnFromStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStationID", DbType="Int NOT NULL")]
		public int ToStationID
		{
			get
			{
				return this._ToStationID;
			}
			set
			{
				if ((this._ToStationID != value))
				{
					this.OnToStationIDChanging(value);
					this.SendPropertyChanging();
					this._ToStationID = value;
					this.SendPropertyChanged("ToStationID");
					this.OnToStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PieceCount", DbType="Int NOT NULL")]
		public int PieceCount
		{
			get
			{
				return this._PieceCount;
			}
			set
			{
				if ((this._PieceCount != value))
				{
					this.OnPieceCountChanging(value);
					this.SendPropertyChanging();
					this._PieceCount = value;
					this.SendPropertyChanged("PieceCount");
					this.OnPieceCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeIn", DbType="DateTime NOT NULL")]
		public System.DateTime TimeIn
		{
			get
			{
				return this._TimeIn;
			}
			set
			{
				if ((this._TimeIn != value))
				{
					this.OnTimeInChanging(value);
					this.SendPropertyChanging();
					this._TimeIn = value;
					this.SendPropertyChanged("TimeIn");
					this.OnTimeInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOut", DbType="DateTime NOT NULL")]
		public System.DateTime TimeOut
		{
			get
			{
				return this._TimeOut;
			}
			set
			{
				if ((this._TimeOut != value))
				{
					this.OnTimeOutChanging(value);
					this.SendPropertyChanging();
					this._TimeOut = value;
					this.SendPropertyChanged("TimeOut");
					this.OnTimeOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit NOT NULL")]
		public bool IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this.OnIsSyncChanging(value);
					this.SendPropertyChanging();
					this._IsSync = value;
					this.SendPropertyChanged("IsSync");
					this.OnIsSyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationID", DbType="Int NOT NULL")]
		public int StationID
		{
			get
			{
				return this._StationID;
			}
			set
			{
				if ((this._StationID != value))
				{
					this.OnStationIDChanging(value);
					this.SendPropertyChanging();
					this._StationID = value;
					this.SendPropertyChanged("StationID");
					this.OnStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefNo", DbType="NVarChar(100)")]
		public string RefNo
		{
			get
			{
				return this._RefNo;
			}
			set
			{
				if ((this._RefNo != value))
				{
					this.OnRefNoChanging(value);
					this.SendPropertyChanging();
					this._RefNo = value;
					this.SendPropertyChanged("RefNo");
					this.OnRefNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentVersion", DbType="NVarChar(50)")]
		public string CurrentVersion
		{
			get
			{
				return this._CurrentVersion;
			}
			set
			{
				if ((this._CurrentVersion != value))
				{
					this.OnCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._CurrentVersion = value;
					this.SendPropertyChanged("CurrentVersion");
					this.OnCurrentVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsServerTime", DbType="Bit")]
		public System.Nullable<bool> IsServerTime
		{
			get
			{
				return this._IsServerTime;
			}
			set
			{
				if ((this._IsServerTime != value))
				{
					this.OnIsServerTimeChanging(value);
					this.SendPropertyChanging();
					this._IsServerTime = value;
					this.SendPropertyChanged("IsServerTime");
					this.OnIsServerTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(250)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(250)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedAmt", DbType="Float")]
		public System.Nullable<double> ReceivedAmt
		{
			get
			{
				return this._ReceivedAmt;
			}
			set
			{
				if ((this._ReceivedAmt != value))
				{
					this.OnReceivedAmtChanging(value);
					this.SendPropertyChanging();
					this._ReceivedAmt = value;
					this.SendPropertyChanged("ReceivedAmt");
					this.OnReceivedAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="NVarChar(50)")]
		public string ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsManual", DbType="Bit")]
		public System.Nullable<bool> IsManual
		{
			get
			{
				return this._IsManual;
			}
			set
			{
				if ((this._IsManual != value))
				{
					this.OnIsManualChanging(value);
					this.SendPropertyChanging();
					this._IsManual = value;
					this.SendPropertyChanged("IsManual");
					this.OnIsManualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopPointsID", DbType="Int")]
		public System.Nullable<int> StopPointsID
		{
			get
			{
				return this._StopPointsID;
			}
			set
			{
				if ((this._StopPointsID != value))
				{
					this.OnStopPointsIDChanging(value);
					this.SendPropertyChanging();
					this._StopPointsID = value;
					this.SendPropertyChanged("StopPointsID");
					this.OnStopPointsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PickUp_PickUpDetail", Storage="_PickUpDetails", ThisKey="ID", OtherKey="PickUpID")]
		public EntitySet<PickUpDetail> PickUpDetails
		{
			get
			{
				return this._PickUpDetails;
			}
			set
			{
				this._PickUpDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PickUpDetails(PickUpDetail entity)
		{
			this.SendPropertyChanging();
			entity.PickUp = this;
		}
		
		private void detach_PickUpDetails(PickUpDetail entity)
		{
			this.SendPropertyChanging();
			entity.PickUp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PickUpDetail")]
	public partial class PickUpDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BarCode;
		
		private int _PickUpID;
		
		private bool _IsSync;
		
		private EntityRef<PickUp> _PickUp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    partial void OnPickUpIDChanging(int value);
    partial void OnPickUpIDChanged();
    partial void OnIsSyncChanging(bool value);
    partial void OnIsSyncChanged();
    #endregion
		
		public PickUpDetail()
		{
			this._PickUp = default(EntityRef<PickUp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickUpID", DbType="Int NOT NULL")]
		public int PickUpID
		{
			get
			{
				return this._PickUpID;
			}
			set
			{
				if ((this._PickUpID != value))
				{
					if (this._PickUp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPickUpIDChanging(value);
					this.SendPropertyChanging();
					this._PickUpID = value;
					this.SendPropertyChanged("PickUpID");
					this.OnPickUpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit NOT NULL")]
		public bool IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this.OnIsSyncChanging(value);
					this.SendPropertyChanging();
					this._IsSync = value;
					this.SendPropertyChanged("IsSync");
					this.OnIsSyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PickUp_PickUpDetail", Storage="_PickUp", ThisKey="PickUpID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PickUp PickUp
		{
			get
			{
				return this._PickUp.Entity;
			}
			set
			{
				PickUp previousValue = this._PickUp.Entity;
				if (((previousValue != value) 
							|| (this._PickUp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PickUp.Entity = null;
						previousValue.PickUpDetails.Remove(this);
					}
					this._PickUp.Entity = value;
					if ((value != null))
					{
						value.PickUpDetails.Add(this);
						this._PickUpID = value.ID;
					}
					else
					{
						this._PickUpID = default(int);
					}
					this.SendPropertyChanged("PickUp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMeLogin")]
	public partial class UserMeLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _EmployID;
		
		private int _StateID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _HHDName;
		
		private string _Version;
		
		private System.Nullable<bool> _IsSync;
		
		private System.Nullable<int> _TruckID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEmployIDChanging(int value);
    partial void OnEmployIDChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnHHDNameChanging(string value);
    partial void OnHHDNameChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnIsSyncChanging(System.Nullable<bool> value);
    partial void OnIsSyncChanged();
    partial void OnTruckIDChanging(System.Nullable<int> value);
    partial void OnTruckIDChanged();
    #endregion
		
		public UserMeLogin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployID", DbType="Int NOT NULL")]
		public int EmployID
		{
			get
			{
				return this._EmployID;
			}
			set
			{
				if ((this._EmployID != value))
				{
					this.OnEmployIDChanging(value);
					this.SendPropertyChanging();
					this._EmployID = value;
					this.SendPropertyChanged("EmployID");
					this.OnEmployIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HHDName", DbType="NVarChar(250)")]
		public string HHDName
		{
			get
			{
				return this._HHDName;
			}
			set
			{
				if ((this._HHDName != value))
				{
					this.OnHHDNameChanging(value);
					this.SendPropertyChanging();
					this._HHDName = value;
					this.SendPropertyChanged("HHDName");
					this.OnHHDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(50)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit")]
		public System.Nullable<bool> IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this.OnIsSyncChanging(value);
					this.SendPropertyChanging();
					this._IsSync = value;
					this.SendPropertyChanged("IsSync");
					this.OnIsSyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckID", DbType="Int")]
		public System.Nullable<int> TruckID
		{
			get
			{
				return this._TruckID;
			}
			set
			{
				if ((this._TruckID != value))
				{
					this.OnTruckIDChanging(value);
					this.SendPropertyChanging();
					this._TruckID = value;
					this.SendPropertyChanged("TruckID");
					this.OnTruckIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OnDeliveryDetail")]
	public partial class OnDeliveryDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BarCode;
		
		private bool _IsSync;
		
		private int _DeliveryID;
		
		private EntityRef<OnDelivery> _OnDelivery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    partial void OnIsSyncChanging(bool value);
    partial void OnIsSyncChanged();
    partial void OnDeliveryIDChanging(int value);
    partial void OnDeliveryIDChanged();
    #endregion
		
		public OnDeliveryDetail()
		{
			this._OnDelivery = default(EntityRef<OnDelivery>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit NOT NULL")]
		public bool IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this.OnIsSyncChanging(value);
					this.SendPropertyChanging();
					this._IsSync = value;
					this.SendPropertyChanged("IsSync");
					this.OnIsSyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryID", DbType="Int NOT NULL")]
		public int DeliveryID
		{
			get
			{
				return this._DeliveryID;
			}
			set
			{
				if ((this._DeliveryID != value))
				{
					if (this._OnDelivery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryIDChanging(value);
					this.SendPropertyChanging();
					this._DeliveryID = value;
					this.SendPropertyChanged("DeliveryID");
					this.OnDeliveryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OnDelivery_OnDeliveryDetail", Storage="_OnDelivery", ThisKey="DeliveryID", OtherKey="ID", IsForeignKey=true)]
		public OnDelivery OnDelivery
		{
			get
			{
				return this._OnDelivery.Entity;
			}
			set
			{
				OnDelivery previousValue = this._OnDelivery.Entity;
				if (((previousValue != value) 
							|| (this._OnDelivery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OnDelivery.Entity = null;
						previousValue.OnDeliveryDetails.Remove(this);
					}
					this._OnDelivery.Entity = value;
					if ((value != null))
					{
						value.OnDeliveryDetails.Add(this);
						this._DeliveryID = value.ID;
					}
					else
					{
						this._DeliveryID = default(int);
					}
					this.SendPropertyChanged("OnDelivery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NotDelivered")]
	public partial class NotDelivered : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _WaybillNo;
		
		private System.DateTime _TimeIn;
		
		private System.DateTime _TimeOut;
		
		private int _UserID;
		
		private bool _IsSync;
		
		private int _StationID;
		
		private int _PiecesCount;
		
		private int _DeliveryStatusID;
		
		private string _Notes;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private EntitySet<NotDeliveredDetail> _NotDeliveredDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWaybillNoChanging(string value);
    partial void OnWaybillNoChanged();
    partial void OnTimeInChanging(System.DateTime value);
    partial void OnTimeInChanged();
    partial void OnTimeOutChanging(System.DateTime value);
    partial void OnTimeOutChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnIsSyncChanging(bool value);
    partial void OnIsSyncChanged();
    partial void OnStationIDChanging(int value);
    partial void OnStationIDChanged();
    partial void OnPiecesCountChanging(int value);
    partial void OnPiecesCountChanged();
    partial void OnDeliveryStatusIDChanging(int value);
    partial void OnDeliveryStatusIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    #endregion
		
		public NotDelivered()
		{
			this._NotDeliveredDetails = new EntitySet<NotDeliveredDetail>(new Action<NotDeliveredDetail>(this.attach_NotDeliveredDetails), new Action<NotDeliveredDetail>(this.detach_NotDeliveredDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string WaybillNo
		{
			get
			{
				return this._WaybillNo;
			}
			set
			{
				if ((this._WaybillNo != value))
				{
					this.OnWaybillNoChanging(value);
					this.SendPropertyChanging();
					this._WaybillNo = value;
					this.SendPropertyChanged("WaybillNo");
					this.OnWaybillNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeIn", DbType="DateTime NOT NULL")]
		public System.DateTime TimeIn
		{
			get
			{
				return this._TimeIn;
			}
			set
			{
				if ((this._TimeIn != value))
				{
					this.OnTimeInChanging(value);
					this.SendPropertyChanging();
					this._TimeIn = value;
					this.SendPropertyChanged("TimeIn");
					this.OnTimeInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOut", DbType="DateTime NOT NULL")]
		public System.DateTime TimeOut
		{
			get
			{
				return this._TimeOut;
			}
			set
			{
				if ((this._TimeOut != value))
				{
					this.OnTimeOutChanging(value);
					this.SendPropertyChanging();
					this._TimeOut = value;
					this.SendPropertyChanged("TimeOut");
					this.OnTimeOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit NOT NULL")]
		public bool IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this.OnIsSyncChanging(value);
					this.SendPropertyChanging();
					this._IsSync = value;
					this.SendPropertyChanged("IsSync");
					this.OnIsSyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationID", DbType="Int NOT NULL")]
		public int StationID
		{
			get
			{
				return this._StationID;
			}
			set
			{
				if ((this._StationID != value))
				{
					this.OnStationIDChanging(value);
					this.SendPropertyChanging();
					this._StationID = value;
					this.SendPropertyChanged("StationID");
					this.OnStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiecesCount", DbType="Int NOT NULL")]
		public int PiecesCount
		{
			get
			{
				return this._PiecesCount;
			}
			set
			{
				if ((this._PiecesCount != value))
				{
					this.OnPiecesCountChanging(value);
					this.SendPropertyChanging();
					this._PiecesCount = value;
					this.SendPropertyChanged("PiecesCount");
					this.OnPiecesCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryStatusID", DbType="Int NOT NULL")]
		public int DeliveryStatusID
		{
			get
			{
				return this._DeliveryStatusID;
			}
			set
			{
				if ((this._DeliveryStatusID != value))
				{
					this.OnDeliveryStatusIDChanging(value);
					this.SendPropertyChanging();
					this._DeliveryStatusID = value;
					this.SendPropertyChanged("DeliveryStatusID");
					this.OnDeliveryStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(200)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(50)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(50)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NotDelivered_NotDeliveredDetail", Storage="_NotDeliveredDetails", ThisKey="ID", OtherKey="NotDeliveredID")]
		public EntitySet<NotDeliveredDetail> NotDeliveredDetails
		{
			get
			{
				return this._NotDeliveredDetails;
			}
			set
			{
				this._NotDeliveredDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NotDeliveredDetails(NotDeliveredDetail entity)
		{
			this.SendPropertyChanging();
			entity.NotDelivered = this;
		}
		
		private void detach_NotDeliveredDetails(NotDeliveredDetail entity)
		{
			this.SendPropertyChanging();
			entity.NotDelivered = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NotDeliveredDetail")]
	public partial class NotDeliveredDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BarCode;
		
		private bool _IsSync;
		
		private int _NotDeliveredID;
		
		private EntityRef<NotDelivered> _NotDelivered;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    partial void OnIsSyncChanging(bool value);
    partial void OnIsSyncChanged();
    partial void OnNotDeliveredIDChanging(int value);
    partial void OnNotDeliveredIDChanged();
    #endregion
		
		public NotDeliveredDetail()
		{
			this._NotDelivered = default(EntityRef<NotDelivered>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit NOT NULL")]
		public bool IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this.OnIsSyncChanging(value);
					this.SendPropertyChanging();
					this._IsSync = value;
					this.SendPropertyChanged("IsSync");
					this.OnIsSyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotDeliveredID", DbType="Int NOT NULL")]
		public int NotDeliveredID
		{
			get
			{
				return this._NotDeliveredID;
			}
			set
			{
				if ((this._NotDeliveredID != value))
				{
					if (this._NotDelivered.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNotDeliveredIDChanging(value);
					this.SendPropertyChanging();
					this._NotDeliveredID = value;
					this.SendPropertyChanged("NotDeliveredID");
					this.OnNotDeliveredIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NotDelivered_NotDeliveredDetail", Storage="_NotDelivered", ThisKey="NotDeliveredID", OtherKey="ID", IsForeignKey=true)]
		public NotDelivered NotDelivered
		{
			get
			{
				return this._NotDelivered.Entity;
			}
			set
			{
				NotDelivered previousValue = this._NotDelivered.Entity;
				if (((previousValue != value) 
							|| (this._NotDelivered.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NotDelivered.Entity = null;
						previousValue.NotDeliveredDetails.Remove(this);
					}
					this._NotDelivered.Entity = value;
					if ((value != null))
					{
						value.NotDeliveredDetails.Add(this);
						this._NotDeliveredID = value.ID;
					}
					else
					{
						this._NotDeliveredID = default(int);
					}
					this.SendPropertyChanged("NotDelivered");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OnCloadingForD")]
	public partial class OnCloadingForD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CourierID;
		
		private int _UserID;
		
		private bool _IsSync;
		
		private System.DateTime _CTime;
		
		private int _PieceCount;
		
		private string _TruckID;
		
		private int _IDs;
		
		private int _WaybillCount;
		
		private int _StationID;
		
		private EntitySet<OnCLoadingForDDetail> _OnCLoadingForDDetails;
		
		private EntitySet<OnCLoadingForDWaybill> _OnCLoadingForDWaybills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCourierIDChanging(int value);
    partial void OnCourierIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnIsSyncChanging(bool value);
    partial void OnIsSyncChanged();
    partial void OnCTimeChanging(System.DateTime value);
    partial void OnCTimeChanged();
    partial void OnPieceCountChanging(int value);
    partial void OnPieceCountChanged();
    partial void OnTruckIDChanging(string value);
    partial void OnTruckIDChanged();
    partial void OnIDsChanging(int value);
    partial void OnIDsChanged();
    partial void OnWaybillCountChanging(int value);
    partial void OnWaybillCountChanged();
    partial void OnStationIDChanging(int value);
    partial void OnStationIDChanged();
    #endregion
		
		public OnCloadingForD()
		{
			this._OnCLoadingForDDetails = new EntitySet<OnCLoadingForDDetail>(new Action<OnCLoadingForDDetail>(this.attach_OnCLoadingForDDetails), new Action<OnCLoadingForDDetail>(this.detach_OnCLoadingForDDetails));
			this._OnCLoadingForDWaybills = new EntitySet<OnCLoadingForDWaybill>(new Action<OnCLoadingForDWaybill>(this.attach_OnCLoadingForDWaybills), new Action<OnCLoadingForDWaybill>(this.detach_OnCLoadingForDWaybills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourierID", DbType="Int NOT NULL")]
		public int CourierID
		{
			get
			{
				return this._CourierID;
			}
			set
			{
				if ((this._CourierID != value))
				{
					this.OnCourierIDChanging(value);
					this.SendPropertyChanging();
					this._CourierID = value;
					this.SendPropertyChanged("CourierID");
					this.OnCourierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit NOT NULL")]
		public bool IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this.OnIsSyncChanging(value);
					this.SendPropertyChanging();
					this._IsSync = value;
					this.SendPropertyChanged("IsSync");
					this.OnIsSyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTime", DbType="DateTime NOT NULL")]
		public System.DateTime CTime
		{
			get
			{
				return this._CTime;
			}
			set
			{
				if ((this._CTime != value))
				{
					this.OnCTimeChanging(value);
					this.SendPropertyChanging();
					this._CTime = value;
					this.SendPropertyChanged("CTime");
					this.OnCTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PieceCount", DbType="Int NOT NULL")]
		public int PieceCount
		{
			get
			{
				return this._PieceCount;
			}
			set
			{
				if ((this._PieceCount != value))
				{
					this.OnPieceCountChanging(value);
					this.SendPropertyChanging();
					this._PieceCount = value;
					this.SendPropertyChanged("PieceCount");
					this.OnPieceCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckID", DbType="NVarChar(50)")]
		public string TruckID
		{
			get
			{
				return this._TruckID;
			}
			set
			{
				if ((this._TruckID != value))
				{
					this.OnTruckIDChanging(value);
					this.SendPropertyChanging();
					this._TruckID = value;
					this.SendPropertyChanged("TruckID");
					this.OnTruckIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDs", DbType="Int NOT NULL")]
		public int IDs
		{
			get
			{
				return this._IDs;
			}
			set
			{
				if ((this._IDs != value))
				{
					this.OnIDsChanging(value);
					this.SendPropertyChanging();
					this._IDs = value;
					this.SendPropertyChanged("IDs");
					this.OnIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillCount", DbType="Int NOT NULL")]
		public int WaybillCount
		{
			get
			{
				return this._WaybillCount;
			}
			set
			{
				if ((this._WaybillCount != value))
				{
					this.OnWaybillCountChanging(value);
					this.SendPropertyChanging();
					this._WaybillCount = value;
					this.SendPropertyChanged("WaybillCount");
					this.OnWaybillCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationID", DbType="Int NOT NULL")]
		public int StationID
		{
			get
			{
				return this._StationID;
			}
			set
			{
				if ((this._StationID != value))
				{
					this.OnStationIDChanging(value);
					this.SendPropertyChanging();
					this._StationID = value;
					this.SendPropertyChanged("StationID");
					this.OnStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OnCloadingForD_OnCLoadingForDDetail", Storage="_OnCLoadingForDDetails", ThisKey="ID", OtherKey="OnCLoadingForDID")]
		public EntitySet<OnCLoadingForDDetail> OnCLoadingForDDetails
		{
			get
			{
				return this._OnCLoadingForDDetails;
			}
			set
			{
				this._OnCLoadingForDDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OnCloadingForD_OnCLoadingForDWaybill", Storage="_OnCLoadingForDWaybills", ThisKey="ID", OtherKey="OnCLoadingID")]
		public EntitySet<OnCLoadingForDWaybill> OnCLoadingForDWaybills
		{
			get
			{
				return this._OnCLoadingForDWaybills;
			}
			set
			{
				this._OnCLoadingForDWaybills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OnCLoadingForDDetails(OnCLoadingForDDetail entity)
		{
			this.SendPropertyChanging();
			entity.OnCloadingForD = this;
		}
		
		private void detach_OnCLoadingForDDetails(OnCLoadingForDDetail entity)
		{
			this.SendPropertyChanging();
			entity.OnCloadingForD = null;
		}
		
		private void attach_OnCLoadingForDWaybills(OnCLoadingForDWaybill entity)
		{
			this.SendPropertyChanging();
			entity.OnCloadingForD = this;
		}
		
		private void detach_OnCLoadingForDWaybills(OnCLoadingForDWaybill entity)
		{
			this.SendPropertyChanging();
			entity.OnCloadingForD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OnCLoadingForDDetail")]
	public partial class OnCLoadingForDDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BarCode;
		
		private bool _IsSync;
		
		private int _OnCLoadingForDID;
		
		private EntityRef<OnCloadingForD> _OnCloadingForD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    partial void OnIsSyncChanging(bool value);
    partial void OnIsSyncChanged();
    partial void OnOnCLoadingForDIDChanging(int value);
    partial void OnOnCLoadingForDIDChanged();
    #endregion
		
		public OnCLoadingForDDetail()
		{
			this._OnCloadingForD = default(EntityRef<OnCloadingForD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit NOT NULL")]
		public bool IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this.OnIsSyncChanging(value);
					this.SendPropertyChanging();
					this._IsSync = value;
					this.SendPropertyChanged("IsSync");
					this.OnIsSyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnCLoadingForDID", DbType="Int NOT NULL")]
		public int OnCLoadingForDID
		{
			get
			{
				return this._OnCLoadingForDID;
			}
			set
			{
				if ((this._OnCLoadingForDID != value))
				{
					if (this._OnCloadingForD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOnCLoadingForDIDChanging(value);
					this.SendPropertyChanging();
					this._OnCLoadingForDID = value;
					this.SendPropertyChanged("OnCLoadingForDID");
					this.OnOnCLoadingForDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OnCloadingForD_OnCLoadingForDDetail", Storage="_OnCloadingForD", ThisKey="OnCLoadingForDID", OtherKey="ID", IsForeignKey=true)]
		public OnCloadingForD OnCloadingForD
		{
			get
			{
				return this._OnCloadingForD.Entity;
			}
			set
			{
				OnCloadingForD previousValue = this._OnCloadingForD.Entity;
				if (((previousValue != value) 
							|| (this._OnCloadingForD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OnCloadingForD.Entity = null;
						previousValue.OnCLoadingForDDetails.Remove(this);
					}
					this._OnCloadingForD.Entity = value;
					if ((value != null))
					{
						value.OnCLoadingForDDetails.Add(this);
						this._OnCLoadingForDID = value.ID;
					}
					else
					{
						this._OnCLoadingForDID = default(int);
					}
					this.SendPropertyChanged("OnCloadingForD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OnCLoadingForDWaybill")]
	public partial class OnCLoadingForDWaybill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _WaybillNo;
		
		private bool _IsSync;
		
		private int _OnCLoadingID;
		
		private EntityRef<OnCloadingForD> _OnCloadingForD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWaybillNoChanging(string value);
    partial void OnWaybillNoChanged();
    partial void OnIsSyncChanging(bool value);
    partial void OnIsSyncChanged();
    partial void OnOnCLoadingIDChanging(int value);
    partial void OnOnCLoadingIDChanged();
    #endregion
		
		public OnCLoadingForDWaybill()
		{
			this._OnCloadingForD = default(EntityRef<OnCloadingForD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string WaybillNo
		{
			get
			{
				return this._WaybillNo;
			}
			set
			{
				if ((this._WaybillNo != value))
				{
					this.OnWaybillNoChanging(value);
					this.SendPropertyChanging();
					this._WaybillNo = value;
					this.SendPropertyChanged("WaybillNo");
					this.OnWaybillNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit NOT NULL")]
		public bool IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this.OnIsSyncChanging(value);
					this.SendPropertyChanging();
					this._IsSync = value;
					this.SendPropertyChanged("IsSync");
					this.OnIsSyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnCLoadingID", DbType="Int NOT NULL")]
		public int OnCLoadingID
		{
			get
			{
				return this._OnCLoadingID;
			}
			set
			{
				if ((this._OnCLoadingID != value))
				{
					if (this._OnCloadingForD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOnCLoadingIDChanging(value);
					this.SendPropertyChanging();
					this._OnCLoadingID = value;
					this.SendPropertyChanged("OnCLoadingID");
					this.OnOnCLoadingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OnCloadingForD_OnCLoadingForDWaybill", Storage="_OnCloadingForD", ThisKey="OnCLoadingID", OtherKey="ID", IsForeignKey=true)]
		public OnCloadingForD OnCloadingForD
		{
			get
			{
				return this._OnCloadingForD.Entity;
			}
			set
			{
				OnCloadingForD previousValue = this._OnCloadingForD.Entity;
				if (((previousValue != value) 
							|| (this._OnCloadingForD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OnCloadingForD.Entity = null;
						previousValue.OnCLoadingForDWaybills.Remove(this);
					}
					this._OnCloadingForD.Entity = value;
					if ((value != null))
					{
						value.OnCLoadingForDWaybills.Add(this);
						this._OnCLoadingID = value.ID;
					}
					else
					{
						this._OnCLoadingID = default(int);
					}
					this.SendPropertyChanged("OnCloadingForD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OnDelivery")]
	public partial class OnDelivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _WaybillNo;
		
		private string _ReceiverName;
		
		private int _PiecesCount;
		
		private System.DateTime _TimeIn;
		
		private System.DateTime _TimeOut;
		
		private int _UserID;
		
		private bool _IsSync;
		
		private int _StationID;
		
		private System.Nullable<bool> _IsPartial;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private System.Nullable<double> _ReceivedAmt;
		
		private string _ReceiptNo;
		
		private System.Nullable<int> _StopPointsID;
		
		private System.Nullable<double> _CashAmount;
		
		private System.Nullable<double> _POSAmount;
		
		private EntitySet<OnDeliveryDetail> _OnDeliveryDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWaybillNoChanging(string value);
    partial void OnWaybillNoChanged();
    partial void OnReceiverNameChanging(string value);
    partial void OnReceiverNameChanged();
    partial void OnPiecesCountChanging(int value);
    partial void OnPiecesCountChanged();
    partial void OnTimeInChanging(System.DateTime value);
    partial void OnTimeInChanged();
    partial void OnTimeOutChanging(System.DateTime value);
    partial void OnTimeOutChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnIsSyncChanging(bool value);
    partial void OnIsSyncChanged();
    partial void OnStationIDChanging(int value);
    partial void OnStationIDChanged();
    partial void OnIsPartialChanging(System.Nullable<bool> value);
    partial void OnIsPartialChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnReceivedAmtChanging(System.Nullable<double> value);
    partial void OnReceivedAmtChanged();
    partial void OnReceiptNoChanging(string value);
    partial void OnReceiptNoChanged();
    partial void OnStopPointsIDChanging(System.Nullable<int> value);
    partial void OnStopPointsIDChanged();
    partial void OnCashAmountChanging(System.Nullable<double> value);
    partial void OnCashAmountChanged();
    partial void OnPOSAmountChanging(System.Nullable<double> value);
    partial void OnPOSAmountChanged();
    #endregion
		
		public OnDelivery()
		{
			this._OnDeliveryDetails = new EntitySet<OnDeliveryDetail>(new Action<OnDeliveryDetail>(this.attach_OnDeliveryDetails), new Action<OnDeliveryDetail>(this.detach_OnDeliveryDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string WaybillNo
		{
			get
			{
				return this._WaybillNo;
			}
			set
			{
				if ((this._WaybillNo != value))
				{
					this.OnWaybillNoChanging(value);
					this.SendPropertyChanging();
					this._WaybillNo = value;
					this.SendPropertyChanged("WaybillNo");
					this.OnWaybillNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ReceiverName
		{
			get
			{
				return this._ReceiverName;
			}
			set
			{
				if ((this._ReceiverName != value))
				{
					this.OnReceiverNameChanging(value);
					this.SendPropertyChanging();
					this._ReceiverName = value;
					this.SendPropertyChanged("ReceiverName");
					this.OnReceiverNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiecesCount", DbType="Int NOT NULL")]
		public int PiecesCount
		{
			get
			{
				return this._PiecesCount;
			}
			set
			{
				if ((this._PiecesCount != value))
				{
					this.OnPiecesCountChanging(value);
					this.SendPropertyChanging();
					this._PiecesCount = value;
					this.SendPropertyChanged("PiecesCount");
					this.OnPiecesCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeIn", DbType="DateTime NOT NULL")]
		public System.DateTime TimeIn
		{
			get
			{
				return this._TimeIn;
			}
			set
			{
				if ((this._TimeIn != value))
				{
					this.OnTimeInChanging(value);
					this.SendPropertyChanging();
					this._TimeIn = value;
					this.SendPropertyChanged("TimeIn");
					this.OnTimeInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOut", DbType="DateTime NOT NULL")]
		public System.DateTime TimeOut
		{
			get
			{
				return this._TimeOut;
			}
			set
			{
				if ((this._TimeOut != value))
				{
					this.OnTimeOutChanging(value);
					this.SendPropertyChanging();
					this._TimeOut = value;
					this.SendPropertyChanged("TimeOut");
					this.OnTimeOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit NOT NULL")]
		public bool IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this.OnIsSyncChanging(value);
					this.SendPropertyChanging();
					this._IsSync = value;
					this.SendPropertyChanged("IsSync");
					this.OnIsSyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationID", DbType="Int NOT NULL")]
		public int StationID
		{
			get
			{
				return this._StationID;
			}
			set
			{
				if ((this._StationID != value))
				{
					this.OnStationIDChanging(value);
					this.SendPropertyChanging();
					this._StationID = value;
					this.SendPropertyChanged("StationID");
					this.OnStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPartial", DbType="Bit")]
		public System.Nullable<bool> IsPartial
		{
			get
			{
				return this._IsPartial;
			}
			set
			{
				if ((this._IsPartial != value))
				{
					this.OnIsPartialChanging(value);
					this.SendPropertyChanging();
					this._IsPartial = value;
					this.SendPropertyChanged("IsPartial");
					this.OnIsPartialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(250)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(250)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedAmt", DbType="Float")]
		public System.Nullable<double> ReceivedAmt
		{
			get
			{
				return this._ReceivedAmt;
			}
			set
			{
				if ((this._ReceivedAmt != value))
				{
					this.OnReceivedAmtChanging(value);
					this.SendPropertyChanging();
					this._ReceivedAmt = value;
					this.SendPropertyChanged("ReceivedAmt");
					this.OnReceivedAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="NVarChar(50)")]
		public string ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopPointsID", DbType="Int")]
		public System.Nullable<int> StopPointsID
		{
			get
			{
				return this._StopPointsID;
			}
			set
			{
				if ((this._StopPointsID != value))
				{
					this.OnStopPointsIDChanging(value);
					this.SendPropertyChanging();
					this._StopPointsID = value;
					this.SendPropertyChanged("StopPointsID");
					this.OnStopPointsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAmount", DbType="Float")]
		public System.Nullable<double> CashAmount
		{
			get
			{
				return this._CashAmount;
			}
			set
			{
				if ((this._CashAmount != value))
				{
					this.OnCashAmountChanging(value);
					this.SendPropertyChanging();
					this._CashAmount = value;
					this.SendPropertyChanged("CashAmount");
					this.OnCashAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSAmount", DbType="Float")]
		public System.Nullable<double> POSAmount
		{
			get
			{
				return this._POSAmount;
			}
			set
			{
				if ((this._POSAmount != value))
				{
					this.OnPOSAmountChanging(value);
					this.SendPropertyChanging();
					this._POSAmount = value;
					this.SendPropertyChanged("POSAmount");
					this.OnPOSAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OnDelivery_OnDeliveryDetail", Storage="_OnDeliveryDetails", ThisKey="ID", OtherKey="DeliveryID")]
		public EntitySet<OnDeliveryDetail> OnDeliveryDetails
		{
			get
			{
				return this._OnDeliveryDetails;
			}
			set
			{
				this._OnDeliveryDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OnDeliveryDetails(OnDeliveryDetail entity)
		{
			this.SendPropertyChanging();
			entity.OnDelivery = this;
		}
		
		private void detach_OnDeliveryDetails(OnDeliveryDetail entity)
		{
			this.SendPropertyChanging();
			entity.OnDelivery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[CheckPoint]")]
	public partial class CheckPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _EmployID;
		
		private System.DateTime _Date;
		
		private int _CheckPointTypeID;
		
		private bool _IsSync;
		
		private string _AppVersion;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private int _StatusID;
		
		private EntitySet<CheckPointWaybillDetail> _CheckPointWaybillDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEmployIDChanging(int value);
    partial void OnEmployIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCheckPointTypeIDChanging(int value);
    partial void OnCheckPointTypeIDChanged();
    partial void OnIsSyncChanging(bool value);
    partial void OnIsSyncChanged();
    partial void OnAppVersionChanging(string value);
    partial void OnAppVersionChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    #endregion
		
		public CheckPoint()
		{
			this._CheckPointWaybillDetails = new EntitySet<CheckPointWaybillDetail>(new Action<CheckPointWaybillDetail>(this.attach_CheckPointWaybillDetails), new Action<CheckPointWaybillDetail>(this.detach_CheckPointWaybillDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployID", DbType="Int NOT NULL")]
		public int EmployID
		{
			get
			{
				return this._EmployID;
			}
			set
			{
				if ((this._EmployID != value))
				{
					this.OnEmployIDChanging(value);
					this.SendPropertyChanging();
					this._EmployID = value;
					this.SendPropertyChanged("EmployID");
					this.OnEmployIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPointTypeID", DbType="Int NOT NULL")]
		public int CheckPointTypeID
		{
			get
			{
				return this._CheckPointTypeID;
			}
			set
			{
				if ((this._CheckPointTypeID != value))
				{
					this.OnCheckPointTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CheckPointTypeID = value;
					this.SendPropertyChanged("CheckPointTypeID");
					this.OnCheckPointTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit NOT NULL")]
		public bool IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this.OnIsSyncChanging(value);
					this.SendPropertyChanging();
					this._IsSync = value;
					this.SendPropertyChanged("IsSync");
					this.OnIsSyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppVersion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AppVersion
		{
			get
			{
				return this._AppVersion;
			}
			set
			{
				if ((this._AppVersion != value))
				{
					this.OnAppVersionChanging(value);
					this.SendPropertyChanging();
					this._AppVersion = value;
					this.SendPropertyChanged("AppVersion");
					this.OnAppVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(250)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(250)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CheckPoint_CheckPointWaybillDetail", Storage="_CheckPointWaybillDetails", ThisKey="ID", OtherKey="CheckPointID")]
		public EntitySet<CheckPointWaybillDetail> CheckPointWaybillDetails
		{
			get
			{
				return this._CheckPointWaybillDetails;
			}
			set
			{
				this._CheckPointWaybillDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CheckPointWaybillDetails(CheckPointWaybillDetail entity)
		{
			this.SendPropertyChanging();
			entity.CheckPoint = this;
		}
		
		private void detach_CheckPointWaybillDetails(CheckPointWaybillDetail entity)
		{
			this.SendPropertyChanging();
			entity.CheckPoint = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckPointWaybillDetails")]
	public partial class CheckPointWaybillDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _WaybillNo;
		
		private bool _IsSync;
		
		private int _CheckPointID;
		
		private int _StatusID;
		
		private EntityRef<CheckPoint> _CheckPoint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWaybillNoChanging(string value);
    partial void OnWaybillNoChanged();
    partial void OnIsSyncChanging(bool value);
    partial void OnIsSyncChanged();
    partial void OnCheckPointIDChanging(int value);
    partial void OnCheckPointIDChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    #endregion
		
		public CheckPointWaybillDetail()
		{
			this._CheckPoint = default(EntityRef<CheckPoint>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string WaybillNo
		{
			get
			{
				return this._WaybillNo;
			}
			set
			{
				if ((this._WaybillNo != value))
				{
					this.OnWaybillNoChanging(value);
					this.SendPropertyChanging();
					this._WaybillNo = value;
					this.SendPropertyChanged("WaybillNo");
					this.OnWaybillNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSync", DbType="Bit NOT NULL")]
		public bool IsSync
		{
			get
			{
				return this._IsSync;
			}
			set
			{
				if ((this._IsSync != value))
				{
					this.OnIsSyncChanging(value);
					this.SendPropertyChanging();
					this._IsSync = value;
					this.SendPropertyChanged("IsSync");
					this.OnIsSyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPointID", DbType="Int NOT NULL")]
		public int CheckPointID
		{
			get
			{
				return this._CheckPointID;
			}
			set
			{
				if ((this._CheckPointID != value))
				{
					if (this._CheckPoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckPointIDChanging(value);
					this.SendPropertyChanging();
					this._CheckPointID = value;
					this.SendPropertyChanged("CheckPointID");
					this.OnCheckPointIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CheckPoint_CheckPointWaybillDetail", Storage="_CheckPoint", ThisKey="CheckPointID", OtherKey="ID", IsForeignKey=true)]
		public CheckPoint CheckPoint
		{
			get
			{
				return this._CheckPoint.Entity;
			}
			set
			{
				CheckPoint previousValue = this._CheckPoint.Entity;
				if (((previousValue != value) 
							|| (this._CheckPoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CheckPoint.Entity = null;
						previousValue.CheckPointWaybillDetails.Remove(this);
					}
					this._CheckPoint.Entity = value;
					if ((value != null))
					{
						value.CheckPointWaybillDetails.Add(this);
						this._CheckPointID = value.ID;
					}
					else
					{
						this._CheckPointID = default(int);
					}
					this.SendPropertyChanged("CheckPoint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
